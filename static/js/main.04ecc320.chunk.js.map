{"version":3,"sources":["components/Users/User.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","App.module.css","components/Sider/Sider.module.css","components/Main/Profile/Posts/Posts.module.css","components/Main/Profile/Profile.module.css","components/Sider/Sider.tsx","components/Footer/Footer.tsx","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/DialogsMessage/Message.tsx","components/Dialogs/Dialogs.tsx","components/Redux/MessageReducer.ts","components/Dialogs/DialogsContainer.tsx","components/Main/Profile/Posts/Posts.tsx","components/Redux/PostsProfileReducer.ts","components/Main/Profile/Profile.tsx","components/Header/NavMenu/NavMenu.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Redux/AuthUsersReducer.ts","components/Redux/UsersReducer.ts","components/Users/Users.tsx","components/Users/UsersAPIComponent.tsx","components/Users/UsersContainer.tsx","App.tsx","components/Redux/redux-store.ts","index.tsx"],"names":["module","exports","initialState","siderMenu","id","name","forRoutes","Sider","map","el","className","classes","item__link","item__href","to","item","Footer","DialogsItem","props","dialogsLink","Message","message","Dialogs","dialogsBlock","dialogsItem","dialogsPage","dialogs","d","dialogsMessage","m","img","value","newMessage","onChange","e","onChangeMessage","currentTarget","onClick","addMessage","DialogsContainer","connect","state","dispath","type","changeMessageAC","Post","postBlock","imageAvatar","src","likes","newPostMessage","posts","profile","Profile","useSelector","profilePage","dispatch","useDispatch","users","useParams","useEffect","axios","method","url","then","response","data","items","infoBlock","onChangePost","localStorage","setItem","p","NavMenu","headerItem__link","headerItem__href","href","initialStateType","header","Header","headerMain","imageMain","alt","isAuth","login","headerItem","HeaderContainer","get","resultCode","email","authUser","this","React","Component","auth","pageSize","totalUsersCounter","firstCount","isLoader","isFetching","Users","pageCount","Math","ceil","pages","i","push","console","log","loader","containerPagination","firstCountHandler","usersPage","numBold","container","blockAvatar","photos","large","followed","disabled","followInProgress","delete","withCredentials","headers","unfollow","post","follow","blockUserInfo","blockInfoText","status","UsersAPIComponent","setCurrentUsers","setUsers","Loader","UsersContainer","userId","App","Main","Container","ContentBlock","path","render","from","rootReducer","combineReducers","action","stateCopy","newPost","Date","getTime","unshift","u","storeRedux","createStore","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.04ecc320.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"User_container__2K3wD\",\"imageAvatar\":\"User_imageAvatar__1Dfso\",\"blockAvatar\":\"User_blockAvatar__27GQq\",\"blockInfoText\":\"User_blockInfoText__P917n\",\"blockUserInfo\":\"User_blockUserInfo__IvbOU\",\"containerPagination\":\"User_containerPagination__tvcpp\",\"numBold\":\"User_numBold__2z-iO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__1zNzL\",\"dialogsBlock\":\"Dialogs_dialogsBlock__3Xlua\",\"dialogsItem\":\"Dialogs_dialogsItem__Mq21E\",\"dialogsLink\":\"Dialogs_dialogsLink__3xT3z\",\"dialogsMessage\":\"Dialogs_dialogsMessage__1OtQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerMain\":\"Header_headerMain__2YE4j\",\"headerItem\":\"Header_headerItem__28ubK\",\"headerItem__link\":\"Header_headerItem__link__1zqlV\",\"headerItem__href\":\"Header_headerItem__href__3Pxuc\",\"imageMain\":\"Header_imageMain__B9xEM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"App_Main__2OlMw\",\"Container\":\"App_Container__2Ukex\",\"ContentBlock\":\"App_ContentBlock__12Wct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Sider_item__2u-2W\",\"item__link\":\"Sider_item__link__3vq_X\",\"item__href\":\"Sider_item__href__icVl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageAvatar\":\"Posts_imageAvatar__3p2TM\",\"postBlock\":\"Posts_postBlock__1iJpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoBlock\":\"Profile_infoBlock__1piiE\"};","import React from 'react'\r\nimport {Link, NavLink } from 'react-router-dom'\r\nimport classes from './Sider.module.css'\r\n\r\ntype SiderType = {\r\n    id: number\r\n    name: string\r\n    forRoutes: string\r\n}\r\n\r\ntype SidersMenuTypes = {\r\n    siderMenu: Array<SiderType>\r\n}\r\n\r\nconst initialState:SidersMenuTypes = {\r\n    siderMenu: [\r\n        {id: 1, name: 'Profile', forRoutes: '/profile'},\r\n        {id: 2, name: 'Dialogs', forRoutes: '/dialogs'},\r\n        {id: 3, name: 'Users', forRoutes: '/users'},\r\n        {id: 4, name: 'News', forRoutes: '/news'},\r\n        {id: 5, name: 'Music', forRoutes: '/music'},\r\n    ]\r\n}\r\n\r\nconst Sider = () => {\r\nconst map = initialState.siderMenu.map( (el: any) => {\r\n    return <li key={el.id} className={classes.item__link}><NavLink className={classes.item__href} to={el.forRoutes} >{el.name}</NavLink></li>\r\n} )\r\n    return (\r\n        <nav>\r\n            <ul className={classes.item}>\r\n                {map}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Sider","import React from 'react'\r\nimport classes from './Footer.module.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>Footer</footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\nimport classes from '../Dialogs.module.css'\r\n\r\ntype DialogsItemType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport const DialogsItem: React.FC<DialogsItemType> = (props) => {\r\n\r\n    return (\r\n        <li className={classes.dialogsLink}>{props.name}</li>\r\n    )\r\n}\r\n\r\n","import React from \"react\";\r\n\r\ntype MessageTypes = {\r\n    id: number\r\n    img: string\r\n    message: string\r\n}\r\n\r\n\r\nexport const Message: React.FC<MessageTypes> = (props) => {\r\n\r\n    return (\r\n        <div>{props.message}</div>\r\n    )\r\n}","import React, {ChangeEvent} from 'react'\r\nimport classes from './Dialogs.module.css'\r\nimport {DialogsItem} from './DialogsItem/DialogsItem';\r\nimport {Message} from \"./DialogsMessage/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\n\r\n\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onChangeMessage(e.currentTarget.value);\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Dialogs}>\r\n            <div className={classes.dialogsBlock}>\r\n                <ul className={classes.dialogsItem}>\r\n                    {props.dialogsPage.dialogs.map(d => <DialogsItem key={d.id} id={d.id} name={d.name}/>)}\r\n\r\n                </ul>\r\n                <div className={classes.dialogsMessage}>\r\n                    <div>\r\n                        {props.dialogsPage.message.map(m => <Message key={m.id} id={m.id} img={m.img} message={m.message}/>)}\r\n                        <textarea value={props.dialogsPage.newMessage} onChange={onChangeHandler} name=\"text\"/>\r\n                        <button onClick={props.addMessage}>send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","export type DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport type MessageType = {\r\n    id: number\r\n    img: string\r\n    message: string\r\n}\r\n\r\nconst initialState: InitialTypeDialogs = {\r\n    dialogs: [\r\n        {id: 1, name: 'Pasha'},\r\n        {id: 2, name: 'Masha'},\r\n        {id: 3, name: 'Dima'},\r\n        {id: 4, name: 'Sasha'},\r\n    ],\r\n    message: [\r\n        {id: 1, img: 'src', message: 'text1'},\r\n        {id: 2, img: 'src', message: 'text2'},\r\n        {id: 3, img: 'src', message: 'text3'},\r\n    ],\r\n    newMessage: ''\r\n}\r\n\r\nexport type InitialTypeDialogs = {\r\n    dialogs: Array<DialogsType>\r\n    message: Array<MessageType>\r\n    newMessage: string\r\n}\r\n\r\n\r\nexport const messageReducer = (state: InitialTypeDialogs = initialState, action: ActionsMessageReducerType): InitialTypeDialogs => {\r\n\r\n    let stateCopy = {...state}\r\n\r\n    switch (action.type) {\r\n        case 'ADD-MESSAGE' :\r\n\r\n            const newMessage: MessageType = {\r\n                id: new Date().getTime(),\r\n                img: 'https://avavatar.ru/image/4399',\r\n                message: stateCopy.newMessage\r\n            }\r\n\r\n            stateCopy.message.unshift(newMessage)\r\n            stateCopy.newMessage = ''\r\n            return stateCopy\r\n\r\n        case 'CHANGE-MESSAGE' :\r\n\r\n            stateCopy.newMessage = action.message\r\n\r\n            return stateCopy\r\n\r\n        default:\r\n            return stateCopy\r\n    }\r\n}\r\n\r\n\r\nexport type ActionsMessageReducerType =\r\n    | ReturnType<typeof addMessageAC>\r\n    | ReturnType<typeof changeMessageAC>\r\n\r\n\r\nexport const addMessageAC = () => {\r\n    return {\r\n        type: 'ADD-MESSAGE',\r\n    } as const\r\n}\r\n\r\nexport const changeMessageAC = (message: string) => {\r\n    return {\r\n        type: 'CHANGE-MESSAGE', message\r\n    } as const\r\n}","import React from 'react'\r\nimport Dialogs from \"./Dialogs\";\r\nimport {AppStateType} from \"../Redux/redux-store\";\r\nimport {addMessageAC, changeMessageAC, InitialTypeDialogs} from \"../Redux/MessageReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype MapStateDialogsType = {\r\n    dialogsPage: InitialTypeDialogs\r\n}\r\n\r\ntype MapDispatchDialogsType = {\r\n    addMessage: () => void\r\n    onChangeMessage: (message: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStateDialogsType & MapDispatchDialogsType\r\n\r\nconst mapStateDialogs = (state: AppStateType): MapStateDialogsType  => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst mapDispathDialogs = (dispath: Dispatch): MapDispatchDialogsType  => {\r\n    return {\r\n        addMessage: () => {\r\n            dispath(addMessageAC())\r\n        },\r\n        onChangeMessage: (message: string) => {\r\n            dispath(changeMessageAC(message))\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = connect(mapStateDialogs,mapDispathDialogs) (Dialogs)\r\n\r\nexport default DialogsContainer","import React from 'react'\r\nimport classes from './Posts.module.css'\r\nimport {PostsType} from \"../../../Redux/PostsProfileReducer\";\r\n\r\ntype PostType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n    likes: number\r\n}\r\n\r\nconst Post = (props: PostsType) => {\r\n\r\n    return (\r\n    <>\r\n        <div>\r\n            <p>User</p>\r\n\r\n            <div className={classes.postBlock}>\r\n                <img className={classes.imageAvatar}\r\n                    src={props.img}/>\r\n                <p>{props.name}</p></div>\r\n            <span>likes {props.likes}</span>\r\n        </div>\r\n    </>\r\n)\r\n}\r\n\r\nexport default Post","\r\nexport type MessageType = {\r\n    id: number\r\n    img: string\r\n    message: string\r\n}\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    name: string\r\n    img: string\r\n    likes: number\r\n}\r\n\r\n\r\nconst initialState: PostProfileType = {\r\n    newPostMessage: '',\r\n    message: [],\r\n    posts: [{id: 1, name: \"post1\", img: 'https://picsum.photos/200', likes: 1}],\r\n    profile: null\r\n}\r\n\r\nexport type PostProfileType = {\r\n    newPostMessage: string\r\n    message: Array<MessageType>\r\n    posts: Array<PostsType>\r\n    profile: null\r\n}\r\n\r\nexport const postsProfileReducer = (state: PostProfileType = initialState, action: ActionsPostsReducerType): PostProfileType => {\r\n\r\n    const stateCopy = {...state}\r\n\r\n    switch (action.type) {\r\n        case 'ADD-POST' :\r\n            const newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                name: state.newPostMessage,\r\n                img: 'https://avavatar.ru/images/avatars/1/avatar_jV2wd3K7Xo6YegC2.jpg',\r\n                likes: 2,\r\n            }\r\n\r\n            stateCopy.posts.push(newPost)\r\n            stateCopy.newPostMessage = ''\r\n            return stateCopy\r\n\r\n\r\n        case 'CHANGE-POST' :\r\n            stateCopy.newPostMessage = action.post\r\n            return stateCopy\r\n\r\n        case \"SET-USERS\":\r\n\r\n            return {...state, profile: action.profile}\r\n\r\n\r\n        default:\r\n            return stateCopy\r\n    }\r\n}\r\n\r\nexport type ActionsPostsReducerType =\r\n    | ReturnType<typeof changePostAC>\r\n    | ReturnType<typeof addPostAC>\r\n    | ReturnType<typeof setUsers>\r\n\r\n\r\nexport const addPostAC = () => {\r\n    return {\r\n        type: 'ADD-POST'\r\n    } as const\r\n}\r\n\r\nexport const changePostAC = (post: string) => {\r\n    return {\r\n        type: 'CHANGE-POST',\r\n        post\r\n    } as const\r\n}\r\n\r\nexport const setUsers = (profile: any) => {\r\n    return {\r\n        type: 'SET-USERS',\r\n        profile\r\n    }as const\r\n}\r\n\r\n","import React, {ChangeEvent, useEffect} from 'react'\r\nimport Post from './Posts/Posts'\r\nimport classes from './Profile.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {addPostAC, PostProfileType, setUsers} from \"../../Redux/PostsProfileReducer\";\r\nimport axios from \"axios\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\n\r\nexport const Profile: React.FC<any> = (props) => {\r\n\r\n    const state = useSelector<AppStateType, PostProfileType>(state => state.profilePage)\r\n    const dispatch = useDispatch();\r\n    const {users} = useParams<any>()\r\n\r\n    useEffect(() => {\r\n        //const userId = props.match.params.userId\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: `https://social-network.samuraijs.com/api/1.0/profile/` + users,\r\n        })\r\n            .then((response) => {\r\n                dispatch(setUsers(response.data.items))\r\n            });\r\n    }, [users])\r\n\r\n    const addPost = () => {\r\n        dispatch(addPostAC())\r\n        localStorage.setItem('value', props.profilePage.newPostMessage)\r\n    }\r\n\r\n\r\n    const onChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.onChangePost(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.infoBlock}>\r\n                <div></div>\r\n                <div>{state.profile}</div>\r\n            </div>\r\n\r\n            <div>\r\n                My posts\r\n                <div>\r\n                    <textarea value={state.newPostMessage} onChange={onChange} name=\"textPost\"/>\r\n                    <button onClick={addPost}>опубликовать</button>\r\n                </div>\r\n                {state.posts.map(p => <Post key={p.id} id={p.id} name={p.name} img={p.img} likes={p.likes}/>)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport classes from \"../Header.module.css\";\r\n\r\ntype NavMenuType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport const NavMenu: React.FC<NavMenuType> = (props) => {\r\n    return (\r\n        <>\r\n            <li className={classes.headerItem__link}><a className={classes.headerItem__href} href=\"\">{props.name}</a></li>\r\n        </>\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport classes from './Header.module.css'\r\nimport {NavMenu} from \"./NavMenu/NavMenu\";\r\n\r\ntype HeaderType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype DialogPageTypes = {\r\n    header: Array<HeaderType>\r\n}\r\n\r\nconst initialStateType: DialogPageTypes = {\r\n    header: [\r\n        {id: 1, name: 'About us'},\r\n        {id: 2, name: 'Contacts'},\r\n        {id: 3, name: 'Map'}\r\n    ]\r\n}\r\nexport type AuthUsersType = {\r\n    id: number\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nconst Header = (props: any) => {\r\n\r\n    const map = initialStateType.header.map((m) => {\r\n        return (<NavMenu key={m.id} id={m.id} name={m.name}/>)\r\n    })\r\n    return (\r\n        <header className={classes.headerMain}>\r\n\r\n            <NavLink to='/'>\r\n                <img className={classes.imageMain}\r\n                     src=\"https://media.istockphoto.com/vectors/initial-letter-o-swoosh-orbit-logo-designs-vector-o-initial-logo-for-vector-id1256830588?k=20&m=1256830588&s=170667a&w=0&h=GmfquF0BgJwSJVlLRMQE8sTGo266tOP-Aoa5XewVHOo=\"\r\n                     alt=\"logo\"/></NavLink>\r\n            <nav>\r\n                <div>{props.isAuth ? props.login : <NavLink to='/profile'>login</NavLink>}</div>\r\n                <ul className={classes.headerItem}>\r\n                    {map}\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {authUser} from \"../Redux/AuthUsersReducer\";\r\n\r\nexport class HeaderContainer extends React.Component<any, any> {\r\n    componentDidMount() {\r\n        axios.get(\r\n           `https://social-network.samuraijs.com/api/1.0/auth/me`\r\n        ).then((response) => {\r\n            if (response.data.resultCode === 0) {\r\n                const {id, login, email} = response.data.data\r\n                this.props.authUser(id, login, email)\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n}\r\n\r\nconst mapStateProps = (state: any) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n})\r\n\r\nexport default connect(mapStateProps, {authUser})(Header)","\r\nexport type AuthUsersType = {\r\n    id: number\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\n\r\nexport const initialState: AuthUsersType = {\r\n    id: 2,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nexport const authUsersReducer = (state: any = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"AUTH-USER\": {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof authUser>;\r\n\r\nexport const authUser = (id: number, email: string | number, login: string | number) => {\r\n    return {\r\n        type: 'AUTH-USER',\r\n        data: {\r\n            id,\r\n            email,\r\n            login,\r\n        }\r\n\r\n    } as const\r\n}","type LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\ntype PhotosType = {\r\n    large: string\r\n    small: string\r\n}\r\n\r\ntype UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n    photos: PhotosType\r\n    text: string\r\n}\r\n\r\nexport type UsersReducerType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCounter: number\r\n    firstCount: number\r\n    isLoader: boolean\r\n    isFetching: boolean\r\n}\r\n\r\nconst initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCounter: 100,\r\n    firstCount: 1,\r\n    isLoader: false,\r\n    isFetching: false\r\n}\r\n\r\nexport const usersReducer = (state: UsersReducerType = initialState, action: ActionType): UsersReducerType => {\r\n\r\n    switch (action.type) {\r\n        case 'FOLLOW' : {\r\n            return {\r\n                ...state,\r\n                users: state.users.map((u) => u.id === action.userId ? {...u, followed: true} : u)\r\n            }\r\n        }\r\n\r\n        case 'UNFOLLOW' : {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                        if (u.id === action.userId) {\r\n                            return {...u, followed: false}\r\n                        }\r\n                        return u\r\n                    }\r\n                )\r\n            }\r\n        }\r\n        case 'SET_USERS': {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n\r\n        case 'SET_USERS_CURRENT_PAGE': {\r\n            return {\r\n                ...state,\r\n                firstCount: action.firstCount\r\n            }\r\n        }\r\n        case \"IS_LOADER\": {\r\n            return {\r\n                ...state,\r\n                isLoader: action.isLoader\r\n            }\r\n        }\r\n\r\n        case 'FOLLOW-UN-PROGRESS': {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\ntype ActionType =\r\n    | ReturnType<typeof followAC>\r\n    | ReturnType<typeof unFollowAC>\r\n    | ReturnType<typeof setUsersAC>\r\n    | ReturnType<typeof setUsersCurrentPageAC>\r\n    | ReturnType<typeof setIsLoaderAC>\r\n    | ReturnType<typeof followInProgress>\r\n\r\nexport const followAC = (userId: number) => {\r\n    return {\r\n        type: 'FOLLOW',\r\n        userId\r\n\r\n    } as const\r\n}\r\n\r\nexport const unFollowAC = (userId: number) => {\r\n    return {\r\n        type: 'UNFOLLOW',\r\n        userId\r\n\r\n    } as const\r\n}\r\n\r\nexport const setUsersAC = (users: Array<UsersType>) => {\r\n    return {\r\n        type: 'SET_USERS',\r\n        users\r\n    } as const\r\n}\r\nexport const setUsersCurrentPageAC = (firstCount: number) => {\r\n    return {\r\n        type: 'SET_USERS_CURRENT_PAGE',\r\n        firstCount\r\n    } as const\r\n}\r\nexport const setIsLoaderAC = (isLoader: boolean) => {\r\n    return {\r\n        type: 'IS_LOADER',\r\n        isLoader\r\n    } as const\r\n}\r\nexport const followInProgress = (isFetching: boolean) => {\r\n    return {\r\n        type: 'FOLLOW-UN-PROGRESS',\r\n        isFetching\r\n    } as const\r\n}","import React from 'react';\r\nimport classes from \"./User.module.css\";\r\nimport {UsersReducerType} from \"../Redux/UsersReducer\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\ntype UsersPropsType = {\r\n    usersPage: UsersReducerType\r\n    pageSize: number\r\n    totalUsersCounter: number\r\n    firstCount: number\r\n    firstCountHandler: (firstCount: number) => void\r\n    loader: boolean\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    followInProgress: (isFetching: boolean) => void\r\n    isFetching: boolean\r\n}\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n\r\n    let pageCount = Math.ceil(props.totalUsersCounter / props.pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i < pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    console.log(props.loader)\r\n    const firstCountHandler = (p: number) => {\r\n        props.firstCountHandler(p)\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className={classes.containerPagination}>\r\n\r\n                {props.loader ? <div><img\r\n                    src=\"https://cdn.dribbble.com/users/1787505/screenshots/7300251/media/a351d9e0236c03a539181b95faced9e0.gif\"\r\n                    alt=\"loaderImage\"/></div> : false}\r\n\r\n                {pages.map(m => {\r\n\r\n                    return <span onClick={() => {\r\n                        firstCountHandler(m)\r\n                    }} className={props.usersPage.firstCount === m ? classes.numBold : ''}>{m}</span>\r\n                })}\r\n\r\n            </div>\r\n            {props.usersPage.users.map(users => {\r\n\r\n                return <div className={classes.container}>\r\n                    <div className={classes.blockAvatar}>\r\n                        <NavLink to={`/profile/${users.id}`}>\r\n                            <img className={classes.imageAvatar}\r\n                                 src={users.photos.large}\r\n                                 alt=\"avatar\"/>\r\n                        </NavLink>\r\n                        <div>\r\n                            {users.followed ?\r\n                                <button disabled={props.isFetching} onClick={() => {\r\n                                    props.followInProgress(true)\r\n                                    axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${users.id}`, {\r\n                                        withCredentials: true,\r\n                                        headers: {\r\n                                        'API-KEY': '78b9fdb7-2cb3-4cc9-90a9-7547abd3a933'\r\n                                    }\r\n                                    }).then((response) => {\r\n                                            if (response.data.resultCode === 0) {\r\n                                                props.unfollow(users.id)\r\n                                            }\r\n                                            props.followInProgress(false)\r\n                                    })\r\n                                }\r\n                                }>unFollow</button>\r\n                                :\r\n                                <button disabled={props.isFetching} onClick={() => {\r\n                                    axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${users.id}`, {},{\r\n                                        withCredentials: true,\r\n                                        headers: {\r\n                                           'API-KEY': '78b9fdb7-2cb3-4cc9-90a9-7547abd3a933'\r\n                                        }\r\n                                    }).then((response) => {\r\n                                        if (response.data.resultCode == 0) {\r\n                                            props.follow(users.id)\r\n                                        }\r\n                                    })\r\n                                }}>Follow</button>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.blockUserInfo}>\r\n                        <div>\r\n                            <div>\r\n                                <div>\r\n                                    {users.name}\r\n                                </div>\r\n                            </div>\r\n                            <div className={classes.blockInfoText}>\r\n                                {users.status}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div>\r\n                            {/*<div>{users.location.country}</div>*/}\r\n                            {/*<div>{users.location.city}</div>*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Users;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport {UsersPropsType} from \"./UsersContainer\";\r\nimport Users from \"./Users\";\r\n\r\nexport class UsersAPIComponent extends React.Component<UsersPropsType> {\r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(\r\n            `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.usersPage.firstCount}&count=${this.props.pageSize}`,\r\n\r\n            {\r\n                withCredentials: true\r\n            }\r\n        )\r\n            .then((response) => {\r\n                this.props.setUsers(response.data.items)\r\n            });\r\n\r\n    }\r\n\r\n    firstCountHandler = (p: number) => {\r\n        this.props.isLoader(true)\r\n        this.props.setCurrentUsers(p)\r\n\r\n        axios({\r\n            method: 'get',\r\n            url: `https://social-network.samuraijs.com/api/1.0/users?page=${p}&count=${this.props.pageSize}`,\r\n            withCredentials: true\r\n        })\r\n            .then((response) => {\r\n                this.props.setUsers(response.data.items)\r\n                this.props.isLoader(false)\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return <Users\r\n            usersPage={this.props.usersPage}\r\n            pageSize={this.props.pageSize}\r\n            totalUsersCounter={this.props.totalUsersCounter}\r\n            firstCount={this.props.firstCount}\r\n            firstCountHandler={this.firstCountHandler}\r\n            loader={this.props.Loader}\r\n            follow={this.props.follow}\r\n            unfollow={this.props.unfollow}\r\n            followInProgress={this.props.followInProgress}\r\n            isFetching={this.props.isFetching}\r\n        />\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../Redux/redux-store\";\r\nimport {\r\n    followAC, followInProgress,\r\n    setIsLoaderAC,\r\n    setUsersAC,\r\n    setUsersCurrentPageAC,\r\n    unFollowAC,\r\n    UsersReducerType\r\n} from \"../Redux/UsersReducer\";\r\n\r\nimport {UsersAPIComponent} from \"./UsersAPIComponent\";\r\n\r\nexport type MapStateUsersType = {\r\n    usersPage: UsersReducerType\r\n    pageSize: number\r\n    totalUsersCounter: number\r\n    firstCount: number\r\n    Loader: boolean\r\n    isFetching: boolean\r\n}\r\n\r\ntype MapDispatchUsersType = {\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    setUsers: (user: Array<UsersType>) => void\r\n    setCurrentUsers: (firstCount: number) => void\r\n    isLoader: (loader: boolean) => void\r\n    followInProgress: (isFetching: boolean) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStateUsersType & MapDispatchUsersType\r\n\r\nconst mapStateUsers = (state: AppStateType): MapStateUsersType => {\r\n    return {\r\n        usersPage: state.usersPage,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCounter: state.usersPage.totalUsersCounter,\r\n        firstCount: state.usersPage.firstCount,\r\n        Loader: state.usersPage.isLoader,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\ntype LocationType = {\r\n    city: string\r\n    country: string\r\n}\r\n\r\ntype PhotosType = {\r\n    large: string\r\n    small: string\r\n}\r\n\r\ntype UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    photos: PhotosType\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n    text: string\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateUsers, {\r\n    follow: followAC,\r\n    unfollow: unFollowAC,\r\n    setUsers: setUsersAC,\r\n    setCurrentUsers: setUsersCurrentPageAC,\r\n    isLoader: setIsLoaderAC,\r\n    followInProgress: followInProgress,\r\n})(UsersAPIComponent)\r\n\r\nexport default UsersContainer","import React from 'react';\r\nimport classes from './App.module.css';\r\nimport Sider from './components/Sider/Sider';\r\nimport Footer from './components/Footer/Footer';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport {Profile} from \"./components/Main/Profile/Profile\";\r\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n\r\nfunction App() {\r\n\r\n    return (\r\n            <div className={classes.Main}>\r\n                <div className={classes.Container}>\r\n                    <HeaderContainer />\r\n                    <div className={classes.ContentBlock}>\r\n                        <Sider/>\r\n                        <Switch>\r\n                        <Route path='/profile/:users?' render={() => <Profile />}/>\r\n                        <Route path='/dialogs' render={() => <DialogsContainer />}/>\r\n                        <Route path='/users' render = {() => <UsersContainer />} />\r\n\r\n                            <Redirect from={'/'} to={'/profile'}/>\r\n                        </Switch>\r\n                    </div>\r\n                    <Footer/>\r\n                </div>\r\n            </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {postsProfileReducer} from \"./PostsProfileReducer\";\r\nimport {messageReducer} from \"./MessageReducer\";\r\nimport {usersReducer} from \"./UsersReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    profilePage: postsProfileReducer,\r\n    dialogsPage: messageReducer,\r\n    usersPage: usersReducer,\r\n\r\n})\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nexport const storeRedux = createStore(rootReducer)\r\n\r\nexport default storeRedux","import React from 'react';\r\nimport './index.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {Provider} from 'react-redux';\r\nimport {storeRedux} from \"./components/Redux/redux-store\";\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={storeRedux}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}